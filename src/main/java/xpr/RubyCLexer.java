// Generated from model.g4 by ANTLR 4.5.1
package xpr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class RubyCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, LITERAL=3, COMMA=4, SEMICOLON=5, CRLF=6, COLON=7, REQUIRE=8, 
		END=9, DEF=10, RETURN=11, PIR=12, NEW=13, DEL=14, VPRE=15, VNUM=16, VALIDATE=17, 
		BELONG=18, CLAS=19, PARENT=20, PUT=21, SELF=22, SAVE=23, TRANS=24, DO=25, 
		REND=26, WEB=27, VGE=28, VGT=29, VLE=30, VLT=31, FALSE=32, TRUE=33, IF=34, 
		ELSE=35, ELSIF=36, UNLESS=37, WHILE=38, RETRY=39, BREAK=40, FOR=41, PLUS=42, 
		MINUS=43, MUL=44, DIV=45, MOD=46, EXP=47, EQUAL=48, NOT_EQUAL=49, GREATER=50, 
		LESS=51, LESS_EQUAL=52, GREATER_EQUAL=53, ASSIGN=54, PLUS_ASSIGN=55, MINUS_ASSIGN=56, 
		MUL_ASSIGN=57, DIV_ASSIGN=58, MOD_ASSIGN=59, EXP_ASSIGN=60, BIT_AND=61, 
		BIT_OR=62, BIT_XOR=63, BIT_NOT=64, BIT_SHL=65, BIT_SHR=66, AND=67, OR=68, 
		NOT=69, DOT=70, LEFT_RBRACKET=71, RIGHT_RBRACKET=72, LEFT_SBRACKET=73, 
		RIGHT_SBRACKET=74, NIL=75, SL_COMMENT=76, ML_COMMENT=77, WS=78, INT=79, 
		FLOAT=80, ID=81, ID_GLOBAL=82, ID_FUNCTION=83;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "ESCAPED_QUOTE", "LITERAL", "COMMA", "SEMICOLON", "CRLF", 
		"COLON", "REQUIRE", "END", "DEF", "RETURN", "PIR", "NEW", "DEL", "VPRE", 
		"VNUM", "VALIDATE", "BELONG", "CLAS", "PARENT", "PUT", "SELF", "SAVE", 
		"TRANS", "DO", "REND", "WEB", "VGE", "VGT", "VLE", "VLT", "FALSE", "TRUE", 
		"IF", "ELSE", "ELSIF", "UNLESS", "WHILE", "RETRY", "BREAK", "FOR", "PLUS", 
		"MINUS", "MUL", "DIV", "MOD", "EXP", "EQUAL", "NOT_EQUAL", "GREATER", 
		"LESS", "LESS_EQUAL", "GREATER_EQUAL", "ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", "EXP_ASSIGN", "BIT_AND", "BIT_OR", 
		"BIT_XOR", "BIT_NOT", "BIT_SHL", "BIT_SHR", "AND", "OR", "NOT", "DOT", 
		"LEFT_RBRACKET", "RIGHT_RBRACKET", "LEFT_SBRACKET", "RIGHT_SBRACKET", 
		"NIL", "SL_COMMENT", "ML_COMMENT", "WS", "INT", "FLOAT", "ID", "ID_GLOBAL", 
		"ID_FUNCTION"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", null, "','", "';'", null, "':'", "'require'", "'end'", 
		"'def'", "'return'", "'pir'", "'new'", null, "'validates_presence_of'", 
		"'validates_numericality_of'", "'validates'", "'belongs_to'", "'class'", 
		"'ApplicationController'", "'puts'", "'self'", "'save!'", "'transaction'", 
		"'do'", "'render'", "'json:'", "'greater_than_or_equal_to:'", "'greater_than:'", 
		"'less_than_or_equal_to:'", "'less_than:'", "'false'", "'true'", "'if'", 
		"'else'", "'elsif'", "'unless'", "'while'", "'retry'", "'break'", "'for'", 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'**'", "'=='", "'!='", "'>'", "'<'", 
		"'<='", "'>='", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'**='", 
		"'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", null, null, null, "'.'", "'('", 
		"')'", "'['", "']'", "'nil'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, "LITERAL", "COMMA", "SEMICOLON", "CRLF", "COLON", "REQUIRE", 
		"END", "DEF", "RETURN", "PIR", "NEW", "DEL", "VPRE", "VNUM", "VALIDATE", 
		"BELONG", "CLAS", "PARENT", "PUT", "SELF", "SAVE", "TRANS", "DO", "REND", 
		"WEB", "VGE", "VGT", "VLE", "VLT", "FALSE", "TRUE", "IF", "ELSE", "ELSIF", 
		"UNLESS", "WHILE", "RETRY", "BREAK", "FOR", "PLUS", "MINUS", "MUL", "DIV", 
		"MOD", "EXP", "EQUAL", "NOT_EQUAL", "GREATER", "LESS", "LESS_EQUAL", "GREATER_EQUAL", 
		"ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", 
		"EXP_ASSIGN", "BIT_AND", "BIT_OR", "BIT_XOR", "BIT_NOT", "BIT_SHL", "BIT_SHR", 
		"AND", "OR", "NOT", "DOT", "LEFT_RBRACKET", "RIGHT_RBRACKET", "LEFT_SBRACKET", 
		"RIGHT_SBRACKET", "NIL", "SL_COMMENT", "ML_COMMENT", "WS", "INT", "FLOAT", 
		"ID", "ID_GLOBAL", "ID_FUNCTION"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RubyCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "model.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2U\u02c6\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\7\5\u00b6\n\5\f\5\16\5"+
		"\u00b9\13\5\3\5\3\5\3\5\3\5\7\5\u00bf\n\5\f\5\16\5\u00c2\13\5\3\5\5\5"+
		"\u00c5\n\5\3\6\3\6\3\7\3\7\3\b\5\b\u00cc\n\b\3\b\3\b\3\t\3\t\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\5\20\u0106\n\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30"+
		"\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 "+
		"\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&"+
		"\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3"+
		")\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61"+
		"\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3"+
		"=\3>\3>\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3C\3D\3D\3D\3E\3E\3E\3E\3"+
		"E\5E\u025a\nE\3F\3F\3F\3F\5F\u0260\nF\3G\3G\3G\3G\5G\u0266\nG\3H\3H\3"+
		"I\3I\3J\3J\3K\3K\3L\3L\3M\3M\3M\3M\3N\3N\7N\u0278\nN\fN\16N\u027b\13N"+
		"\3N\5N\u027e\nN\3N\3N\3N\3N\3O\3O\3O\3O\3O\3O\3O\3O\7O\u028c\nO\fO\16"+
		"O\u028f\13O\3O\3O\3O\3O\3O\3O\5O\u0297\nO\3O\3O\3O\3O\3P\6P\u029e\nP\r"+
		"P\16P\u029f\3P\3P\3Q\6Q\u02a5\nQ\rQ\16Q\u02a6\3R\7R\u02aa\nR\fR\16R\u02ad"+
		"\13R\3R\3R\6R\u02b1\nR\rR\16R\u02b2\3S\3S\7S\u02b7\nS\fS\16S\u02ba\13"+
		"S\3T\3T\3T\3U\3U\3U\3U\3U\3U\5U\u02c5\nU\5\u00b7\u00c0\u028d\2V\3\3\5"+
		"\4\7\2\t\5\13\6\r\7\17\b\21\t\23\n\25\13\27\f\31\r\33\16\35\17\37\20!"+
		"\21#\22%\23\'\24)\25+\26-\27/\30\61\31\63\32\65\33\67\349\35;\36=\37?"+
		" A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_\60a\61c\62e\63g\64i\65k\66m\67o8q9"+
		"s:u;w<y={>}?\177@\u0081A\u0083B\u0085C\u0087D\u0089E\u008bF\u008dG\u008f"+
		"H\u0091I\u0093J\u0095K\u0097L\u0099M\u009bN\u009dO\u009fP\u00a1Q\u00a3"+
		"R\u00a5S\u00a7T\u00a9U\3\2\t\4\2\f\f\17\17\4\2\13\13\"\"\3\2\62;\5\2C"+
		"\\aac|\6\2\62;C\\aac|\3\2AA\3\2<<\u02d9\2\3\3\2\2\2\2\5\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2"+
		"\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093"+
		"\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2"+
		"\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5"+
		"\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\3\u00ab\3\2\2\2\5\u00ad\3\2\2"+
		"\2\7\u00af\3\2\2\2\t\u00c4\3\2\2\2\13\u00c6\3\2\2\2\r\u00c8\3\2\2\2\17"+
		"\u00cb\3\2\2\2\21\u00cf\3\2\2\2\23\u00d1\3\2\2\2\25\u00d9\3\2\2\2\27\u00dd"+
		"\3\2\2\2\31\u00e1\3\2\2\2\33\u00e8\3\2\2\2\35\u00ec\3\2\2\2\37\u0105\3"+
		"\2\2\2!\u0107\3\2\2\2#\u011d\3\2\2\2%\u0137\3\2\2\2\'\u0141\3\2\2\2)\u014c"+
		"\3\2\2\2+\u0152\3\2\2\2-\u0168\3\2\2\2/\u016d\3\2\2\2\61\u0172\3\2\2\2"+
		"\63\u0178\3\2\2\2\65\u0184\3\2\2\2\67\u0187\3\2\2\29\u018e\3\2\2\2;\u0194"+
		"\3\2\2\2=\u01ae\3\2\2\2?\u01bc\3\2\2\2A\u01d3\3\2\2\2C\u01de\3\2\2\2E"+
		"\u01e4\3\2\2\2G\u01e9\3\2\2\2I\u01ec\3\2\2\2K\u01f1\3\2\2\2M\u01f7\3\2"+
		"\2\2O\u01fe\3\2\2\2Q\u0204\3\2\2\2S\u020a\3\2\2\2U\u0210\3\2\2\2W\u0214"+
		"\3\2\2\2Y\u0216\3\2\2\2[\u0218\3\2\2\2]\u021a\3\2\2\2_\u021c\3\2\2\2a"+
		"\u021e\3\2\2\2c\u0221\3\2\2\2e\u0224\3\2\2\2g\u0227\3\2\2\2i\u0229\3\2"+
		"\2\2k\u022b\3\2\2\2m\u022e\3\2\2\2o\u0231\3\2\2\2q\u0233\3\2\2\2s\u0236"+
		"\3\2\2\2u\u0239\3\2\2\2w\u023c\3\2\2\2y\u023f\3\2\2\2{\u0242\3\2\2\2}"+
		"\u0246\3\2\2\2\177\u0248\3\2\2\2\u0081\u024a\3\2\2\2\u0083\u024c\3\2\2"+
		"\2\u0085\u024e\3\2\2\2\u0087\u0251\3\2\2\2\u0089\u0259\3\2\2\2\u008b\u025f"+
		"\3\2\2\2\u008d\u0265\3\2\2\2\u008f\u0267\3\2\2\2\u0091\u0269\3\2\2\2\u0093"+
		"\u026b\3\2\2\2\u0095\u026d\3\2\2\2\u0097\u026f\3\2\2\2\u0099\u0271\3\2"+
		"\2\2\u009b\u0275\3\2\2\2\u009d\u0283\3\2\2\2\u009f\u029d\3\2\2\2\u00a1"+
		"\u02a4\3\2\2\2\u00a3\u02ab\3\2\2\2\u00a5\u02b4\3\2\2\2\u00a7\u02bb\3\2"+
		"\2\2\u00a9\u02c4\3\2\2\2\u00ab\u00ac\7}\2\2\u00ac\4\3\2\2\2\u00ad\u00ae"+
		"\7\177\2\2\u00ae\6\3\2\2\2\u00af\u00b0\7^\2\2\u00b0\u00b1\7$\2\2\u00b1"+
		"\b\3\2\2\2\u00b2\u00b7\7$\2\2\u00b3\u00b6\5\7\4\2\u00b4\u00b6\n\2\2\2"+
		"\u00b5\u00b3\3\2\2\2\u00b5\u00b4\3\2\2\2\u00b6\u00b9\3\2\2\2\u00b7\u00b8"+
		"\3\2\2\2\u00b7\u00b5\3\2\2\2\u00b8\u00ba\3\2\2\2\u00b9\u00b7\3\2\2\2\u00ba"+
		"\u00c5\7$\2\2\u00bb\u00c0\7)\2\2\u00bc\u00bf\5\7\4\2\u00bd\u00bf\n\2\2"+
		"\2\u00be\u00bc\3\2\2\2\u00be\u00bd\3\2\2\2\u00bf\u00c2\3\2\2\2\u00c0\u00c1"+
		"\3\2\2\2\u00c0\u00be\3\2\2\2\u00c1\u00c3\3\2\2\2\u00c2\u00c0\3\2\2\2\u00c3"+
		"\u00c5\7)\2\2\u00c4\u00b2\3\2\2\2\u00c4\u00bb\3\2\2\2\u00c5\n\3\2\2\2"+
		"\u00c6\u00c7\7.\2\2\u00c7\f\3\2\2\2\u00c8\u00c9\7=\2\2\u00c9\16\3\2\2"+
		"\2\u00ca\u00cc\7\17\2\2\u00cb\u00ca\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc"+
		"\u00cd\3\2\2\2\u00cd\u00ce\7\f\2\2\u00ce\20\3\2\2\2\u00cf\u00d0\7<\2\2"+
		"\u00d0\22\3\2\2\2\u00d1\u00d2\7t\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7"+
		"s\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8"+
		"\7g\2\2\u00d8\24\3\2\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7p\2\2\u00db\u00dc"+
		"\7f\2\2\u00dc\26\3\2\2\2\u00dd\u00de\7f\2\2\u00de\u00df\7g\2\2\u00df\u00e0"+
		"\7h\2\2\u00e0\30\3\2\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4"+
		"\7v\2\2\u00e4\u00e5\7w\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7\7p\2\2\u00e7"+
		"\32\3\2\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7k\2\2\u00ea\u00eb\7t\2\2\u00eb"+
		"\34\3\2\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7y\2\2\u00ef"+
		"\36\3\2\2\2\u00f0\u00f1\7f\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3\7n\2\2\u00f3"+
		"\u00f4\7g\2\2\u00f4\u00f5\7v\2\2\u00f5\u0106\7g\2\2\u00f6\u00f7\7f\2\2"+
		"\u00f7\u00f8\7g\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb"+
		"\7t\2\2\u00fb\u00fc\7q\2\2\u00fc\u0106\7{\2\2\u00fd\u00fe\7f\2\2\u00fe"+
		"\u00ff\7g\2\2\u00ff\u0100\7u\2\2\u0100\u0101\7v\2\2\u0101\u0102\7t\2\2"+
		"\u0102\u0103\7q\2\2\u0103\u0104\7{\2\2\u0104\u0106\7#\2\2\u0105\u00f0"+
		"\3\2\2\2\u0105\u00f6\3\2\2\2\u0105\u00fd\3\2\2\2\u0106 \3\2\2\2\u0107"+
		"\u0108\7x\2\2\u0108\u0109\7c\2\2\u0109\u010a\7n\2\2\u010a\u010b\7k\2\2"+
		"\u010b\u010c\7f\2\2\u010c\u010d\7c\2\2\u010d\u010e\7v\2\2\u010e\u010f"+
		"\7g\2\2\u010f\u0110\7u\2\2\u0110\u0111\7a\2\2\u0111\u0112\7r\2\2\u0112"+
		"\u0113\7t\2\2\u0113\u0114\7g\2\2\u0114\u0115\7u\2\2\u0115\u0116\7g\2\2"+
		"\u0116\u0117\7p\2\2\u0117\u0118\7e\2\2\u0118\u0119\7g\2\2\u0119\u011a"+
		"\7a\2\2\u011a\u011b\7q\2\2\u011b\u011c\7h\2\2\u011c\"\3\2\2\2\u011d\u011e"+
		"\7x\2\2\u011e\u011f\7c\2\2\u011f\u0120\7n\2\2\u0120\u0121\7k\2\2\u0121"+
		"\u0122\7f\2\2\u0122\u0123\7c\2\2\u0123\u0124\7v\2\2\u0124\u0125\7g\2\2"+
		"\u0125\u0126\7u\2\2\u0126\u0127\7a\2\2\u0127\u0128\7p\2\2\u0128\u0129"+
		"\7w\2\2\u0129\u012a\7o\2\2\u012a\u012b\7g\2\2\u012b\u012c\7t\2\2\u012c"+
		"\u012d\7k\2\2\u012d\u012e\7e\2\2\u012e\u012f\7c\2\2\u012f\u0130\7n\2\2"+
		"\u0130\u0131\7k\2\2\u0131\u0132\7v\2\2\u0132\u0133\7{\2\2\u0133\u0134"+
		"\7a\2\2\u0134\u0135\7q\2\2\u0135\u0136\7h\2\2\u0136$\3\2\2\2\u0137\u0138"+
		"\7x\2\2\u0138\u0139\7c\2\2\u0139\u013a\7n\2\2\u013a\u013b\7k\2\2\u013b"+
		"\u013c\7f\2\2\u013c\u013d\7c\2\2\u013d\u013e\7v\2\2\u013e\u013f\7g\2\2"+
		"\u013f\u0140\7u\2\2\u0140&\3\2\2\2\u0141\u0142\7d\2\2\u0142\u0143\7g\2"+
		"\2\u0143\u0144\7n\2\2\u0144\u0145\7q\2\2\u0145\u0146\7p\2\2\u0146\u0147"+
		"\7i\2\2\u0147\u0148\7u\2\2\u0148\u0149\7a\2\2\u0149\u014a\7v\2\2\u014a"+
		"\u014b\7q\2\2\u014b(\3\2\2\2\u014c\u014d\7e\2\2\u014d\u014e\7n\2\2\u014e"+
		"\u014f\7c\2\2\u014f\u0150\7u\2\2\u0150\u0151\7u\2\2\u0151*\3\2\2\2\u0152"+
		"\u0153\7C\2\2\u0153\u0154\7r\2\2\u0154\u0155\7r\2\2\u0155\u0156\7n\2\2"+
		"\u0156\u0157\7k\2\2\u0157\u0158\7e\2\2\u0158\u0159\7c\2\2\u0159\u015a"+
		"\7v\2\2\u015a\u015b\7k\2\2\u015b\u015c\7q\2\2\u015c\u015d\7p\2\2\u015d"+
		"\u015e\7E\2\2\u015e\u015f\7q\2\2\u015f\u0160\7p\2\2\u0160\u0161\7v\2\2"+
		"\u0161\u0162\7t\2\2\u0162\u0163\7q\2\2\u0163\u0164\7n\2\2\u0164\u0165"+
		"\7n\2\2\u0165\u0166\7g\2\2\u0166\u0167\7t\2\2\u0167,\3\2\2\2\u0168\u0169"+
		"\7r\2\2\u0169\u016a\7w\2\2\u016a\u016b\7v\2\2\u016b\u016c\7u\2\2\u016c"+
		".\3\2\2\2\u016d\u016e\7u\2\2\u016e\u016f\7g\2\2\u016f\u0170\7n\2\2\u0170"+
		"\u0171\7h\2\2\u0171\60\3\2\2\2\u0172\u0173\7u\2\2\u0173\u0174\7c\2\2\u0174"+
		"\u0175\7x\2\2\u0175\u0176\7g\2\2\u0176\u0177\7#\2\2\u0177\62\3\2\2\2\u0178"+
		"\u0179\7v\2\2\u0179\u017a\7t\2\2\u017a\u017b\7c\2\2\u017b\u017c\7p\2\2"+
		"\u017c\u017d\7u\2\2\u017d\u017e\7c\2\2\u017e\u017f\7e\2\2\u017f\u0180"+
		"\7v\2\2\u0180\u0181\7k\2\2\u0181\u0182\7q\2\2\u0182\u0183\7p\2\2\u0183"+
		"\64\3\2\2\2\u0184\u0185\7f\2\2\u0185\u0186\7q\2\2\u0186\66\3\2\2\2\u0187"+
		"\u0188\7t\2\2\u0188\u0189\7g\2\2\u0189\u018a\7p\2\2\u018a\u018b\7f\2\2"+
		"\u018b\u018c\7g\2\2\u018c\u018d\7t\2\2\u018d8\3\2\2\2\u018e\u018f\7l\2"+
		"\2\u018f\u0190\7u\2\2\u0190\u0191\7q\2\2\u0191\u0192\7p\2\2\u0192\u0193"+
		"\7<\2\2\u0193:\3\2\2\2\u0194\u0195\7i\2\2\u0195\u0196\7t\2\2\u0196\u0197"+
		"\7g\2\2\u0197\u0198\7c\2\2\u0198\u0199\7v\2\2\u0199\u019a\7g\2\2\u019a"+
		"\u019b\7t\2\2\u019b\u019c\7a\2\2\u019c\u019d\7v\2\2\u019d\u019e\7j\2\2"+
		"\u019e\u019f\7c\2\2\u019f\u01a0\7p\2\2\u01a0\u01a1\7a\2\2\u01a1\u01a2"+
		"\7q\2\2\u01a2\u01a3\7t\2\2\u01a3\u01a4\7a\2\2\u01a4\u01a5\7g\2\2\u01a5"+
		"\u01a6\7s\2\2\u01a6\u01a7\7w\2\2\u01a7\u01a8\7c\2\2\u01a8\u01a9\7n\2\2"+
		"\u01a9\u01aa\7a\2\2\u01aa\u01ab\7v\2\2\u01ab\u01ac\7q\2\2\u01ac\u01ad"+
		"\7<\2\2\u01ad<\3\2\2\2\u01ae\u01af\7i\2\2\u01af\u01b0\7t\2\2\u01b0\u01b1"+
		"\7g\2\2\u01b1\u01b2\7c\2\2\u01b2\u01b3\7v\2\2\u01b3\u01b4\7g\2\2\u01b4"+
		"\u01b5\7t\2\2\u01b5\u01b6\7a\2\2\u01b6\u01b7\7v\2\2\u01b7\u01b8\7j\2\2"+
		"\u01b8\u01b9\7c\2\2\u01b9\u01ba\7p\2\2\u01ba\u01bb\7<\2\2\u01bb>\3\2\2"+
		"\2\u01bc\u01bd\7n\2\2\u01bd\u01be\7g\2\2\u01be\u01bf\7u\2\2\u01bf\u01c0"+
		"\7u\2\2\u01c0\u01c1\7a\2\2\u01c1\u01c2\7v\2\2\u01c2\u01c3\7j\2\2\u01c3"+
		"\u01c4\7c\2\2\u01c4\u01c5\7p\2\2\u01c5\u01c6\7a\2\2\u01c6\u01c7\7q\2\2"+
		"\u01c7\u01c8\7t\2\2\u01c8\u01c9\7a\2\2\u01c9\u01ca\7g\2\2\u01ca\u01cb"+
		"\7s\2\2\u01cb\u01cc\7w\2\2\u01cc\u01cd\7c\2\2\u01cd\u01ce\7n\2\2\u01ce"+
		"\u01cf\7a\2\2\u01cf\u01d0\7v\2\2\u01d0\u01d1\7q\2\2\u01d1\u01d2\7<\2\2"+
		"\u01d2@\3\2\2\2\u01d3\u01d4\7n\2\2\u01d4\u01d5\7g\2\2\u01d5\u01d6\7u\2"+
		"\2\u01d6\u01d7\7u\2\2\u01d7\u01d8\7a\2\2\u01d8\u01d9\7v\2\2\u01d9\u01da"+
		"\7j\2\2\u01da\u01db\7c\2\2\u01db\u01dc\7p\2\2\u01dc\u01dd\7<\2\2\u01dd"+
		"B\3\2\2\2\u01de\u01df\7h\2\2\u01df\u01e0\7c\2\2\u01e0\u01e1\7n\2\2\u01e1"+
		"\u01e2\7u\2\2\u01e2\u01e3\7g\2\2\u01e3D\3\2\2\2\u01e4\u01e5\7v\2\2\u01e5"+
		"\u01e6\7t\2\2\u01e6\u01e7\7w\2\2\u01e7\u01e8\7g\2\2\u01e8F\3\2\2\2\u01e9"+
		"\u01ea\7k\2\2\u01ea\u01eb\7h\2\2\u01ebH\3\2\2\2\u01ec\u01ed\7g\2\2\u01ed"+
		"\u01ee\7n\2\2\u01ee\u01ef\7u\2\2\u01ef\u01f0\7g\2\2\u01f0J\3\2\2\2\u01f1"+
		"\u01f2\7g\2\2\u01f2\u01f3\7n\2\2\u01f3\u01f4\7u\2\2\u01f4\u01f5\7k\2\2"+
		"\u01f5\u01f6\7h\2\2\u01f6L\3\2\2\2\u01f7\u01f8\7w\2\2\u01f8\u01f9\7p\2"+
		"\2\u01f9\u01fa\7n\2\2\u01fa\u01fb\7g\2\2\u01fb\u01fc\7u\2\2\u01fc\u01fd"+
		"\7u\2\2\u01fdN\3\2\2\2\u01fe\u01ff\7y\2\2\u01ff\u0200\7j\2\2\u0200\u0201"+
		"\7k\2\2\u0201\u0202\7n\2\2\u0202\u0203\7g\2\2\u0203P\3\2\2\2\u0204\u0205"+
		"\7t\2\2\u0205\u0206\7g\2\2\u0206\u0207\7v\2\2\u0207\u0208\7t\2\2\u0208"+
		"\u0209\7{\2\2\u0209R\3\2\2\2\u020a\u020b\7d\2\2\u020b\u020c\7t\2\2\u020c"+
		"\u020d\7g\2\2\u020d\u020e\7c\2\2\u020e\u020f\7m\2\2\u020fT\3\2\2\2\u0210"+
		"\u0211\7h\2\2\u0211\u0212\7q\2\2\u0212\u0213\7t\2\2\u0213V\3\2\2\2\u0214"+
		"\u0215\7-\2\2\u0215X\3\2\2\2\u0216\u0217\7/\2\2\u0217Z\3\2\2\2\u0218\u0219"+
		"\7,\2\2\u0219\\\3\2\2\2\u021a\u021b\7\61\2\2\u021b^\3\2\2\2\u021c\u021d"+
		"\7\'\2\2\u021d`\3\2\2\2\u021e\u021f\7,\2\2\u021f\u0220\7,\2\2\u0220b\3"+
		"\2\2\2\u0221\u0222\7?\2\2\u0222\u0223\7?\2\2\u0223d\3\2\2\2\u0224\u0225"+
		"\7#\2\2\u0225\u0226\7?\2\2\u0226f\3\2\2\2\u0227\u0228\7@\2\2\u0228h\3"+
		"\2\2\2\u0229\u022a\7>\2\2\u022aj\3\2\2\2\u022b\u022c\7>\2\2\u022c\u022d"+
		"\7?\2\2\u022dl\3\2\2\2\u022e\u022f\7@\2\2\u022f\u0230\7?\2\2\u0230n\3"+
		"\2\2\2\u0231\u0232\7?\2\2\u0232p\3\2\2\2\u0233\u0234\7-\2\2\u0234\u0235"+
		"\7?\2\2\u0235r\3\2\2\2\u0236\u0237\7/\2\2\u0237\u0238\7?\2\2\u0238t\3"+
		"\2\2\2\u0239\u023a\7,\2\2\u023a\u023b\7?\2\2\u023bv\3\2\2\2\u023c\u023d"+
		"\7\61\2\2\u023d\u023e\7?\2\2\u023ex\3\2\2\2\u023f\u0240\7\'\2\2\u0240"+
		"\u0241\7?\2\2\u0241z\3\2\2\2\u0242\u0243\7,\2\2\u0243\u0244\7,\2\2\u0244"+
		"\u0245\7?\2\2\u0245|\3\2\2\2\u0246\u0247\7(\2\2\u0247~\3\2\2\2\u0248\u0249"+
		"\7~\2\2\u0249\u0080\3\2\2\2\u024a\u024b\7`\2\2\u024b\u0082\3\2\2\2\u024c"+
		"\u024d\7\u0080\2\2\u024d\u0084\3\2\2\2\u024e\u024f\7>\2\2\u024f\u0250"+
		"\7>\2\2\u0250\u0086\3\2\2\2\u0251\u0252\7@\2\2\u0252\u0253\7@\2\2\u0253"+
		"\u0088\3\2\2\2\u0254\u0255\7c\2\2\u0255\u0256\7p\2\2\u0256\u025a\7f\2"+
		"\2\u0257\u0258\7(\2\2\u0258\u025a\7(\2\2\u0259\u0254\3\2\2\2\u0259\u0257"+
		"\3\2\2\2\u025a\u008a\3\2\2\2\u025b\u025c\7q\2\2\u025c\u0260\7t\2\2\u025d"+
		"\u025e\7~\2\2\u025e\u0260\7~\2\2\u025f\u025b\3\2\2\2\u025f\u025d\3\2\2"+
		"\2\u0260\u008c\3\2\2\2\u0261\u0262\7p\2\2\u0262\u0263\7q\2\2\u0263\u0266"+
		"\7v\2\2\u0264\u0266\7#\2\2\u0265\u0261\3\2\2\2\u0265\u0264\3\2\2\2\u0266"+
		"\u008e\3\2\2\2\u0267\u0268\7\60\2\2\u0268\u0090\3\2\2\2\u0269\u026a\7"+
		"*\2\2\u026a\u0092\3\2\2\2\u026b\u026c\7+\2\2\u026c\u0094\3\2\2\2\u026d"+
		"\u026e\7]\2\2\u026e\u0096\3\2\2\2\u026f\u0270\7_\2\2\u0270\u0098\3\2\2"+
		"\2\u0271\u0272\7p\2\2\u0272\u0273\7k\2\2\u0273\u0274\7n\2\2\u0274\u009a"+
		"\3\2\2\2\u0275\u0279\7%\2\2\u0276\u0278\n\2\2\2\u0277\u0276\3\2\2\2\u0278"+
		"\u027b\3\2\2\2\u0279\u0277\3\2\2\2\u0279\u027a\3\2\2\2\u027a\u027d\3\2"+
		"\2\2\u027b\u0279\3\2\2\2\u027c\u027e\7\17\2\2\u027d\u027c\3\2\2\2\u027d"+
		"\u027e\3\2\2\2\u027e\u027f\3\2\2\2\u027f\u0280\7\f\2\2\u0280\u0281\3\2"+
		"\2\2\u0281\u0282\bN\2\2\u0282\u009c\3\2\2\2\u0283\u0284\7?\2\2\u0284\u0285"+
		"\7d\2\2\u0285\u0286\7g\2\2\u0286\u0287\7i\2\2\u0287\u0288\7k\2\2\u0288"+
		"\u0289\7p\2\2\u0289\u028d\3\2\2\2\u028a\u028c\13\2\2\2\u028b\u028a\3\2"+
		"\2\2\u028c\u028f\3\2\2\2\u028d\u028e\3\2\2\2\u028d\u028b\3\2\2\2\u028e"+
		"\u0290\3\2\2\2\u028f\u028d\3\2\2\2\u0290\u0291\7?\2\2\u0291\u0292\7g\2"+
		"\2\u0292\u0293\7p\2\2\u0293\u0294\7f\2\2\u0294\u0296\3\2\2\2\u0295\u0297"+
		"\7\17\2\2\u0296\u0295\3\2\2\2\u0296\u0297\3\2\2\2\u0297\u0298\3\2\2\2"+
		"\u0298\u0299\7\f\2\2\u0299\u029a\3\2\2\2\u029a\u029b\bO\2\2\u029b\u009e"+
		"\3\2\2\2\u029c\u029e\t\3\2\2\u029d\u029c\3\2\2\2\u029e\u029f\3\2\2\2\u029f"+
		"\u029d\3\2\2\2\u029f\u02a0\3\2\2\2\u02a0\u02a1\3\2\2\2\u02a1\u02a2\bP"+
		"\2\2\u02a2\u00a0\3\2\2\2\u02a3\u02a5\t\4\2\2\u02a4\u02a3\3\2\2\2\u02a5"+
		"\u02a6\3\2\2\2\u02a6\u02a4\3\2\2\2\u02a6\u02a7\3\2\2\2\u02a7\u00a2\3\2"+
		"\2\2\u02a8\u02aa\t\4\2\2\u02a9\u02a8\3\2\2\2\u02aa\u02ad\3\2\2\2\u02ab"+
		"\u02a9\3\2\2\2\u02ab\u02ac\3\2\2\2\u02ac\u02ae\3\2\2\2\u02ad\u02ab\3\2"+
		"\2\2\u02ae\u02b0\7\60\2\2\u02af\u02b1\t\4\2\2\u02b0\u02af\3\2\2\2\u02b1"+
		"\u02b2\3\2\2\2\u02b2\u02b0\3\2\2\2\u02b2\u02b3\3\2\2\2\u02b3\u00a4\3\2"+
		"\2\2\u02b4\u02b8\t\5\2\2\u02b5\u02b7\t\6\2\2\u02b6\u02b5\3\2\2\2\u02b7"+
		"\u02ba\3\2\2\2\u02b8\u02b6\3\2\2\2\u02b8\u02b9\3\2\2\2\u02b9\u00a6\3\2"+
		"\2\2\u02ba\u02b8\3\2\2\2\u02bb\u02bc\7<\2\2\u02bc\u02bd\5\u00a5S\2\u02bd"+
		"\u00a8\3\2\2\2\u02be\u02bf\5\u00a5S\2\u02bf\u02c0\t\7\2\2\u02c0\u02c5"+
		"\3\2\2\2\u02c1\u02c2\5\u00a5S\2\u02c2\u02c3\t\b\2\2\u02c3\u02c5\3\2\2"+
		"\2\u02c4\u02be\3\2\2\2\u02c4\u02c1\3\2\2\2\u02c5\u00aa\3\2\2\2\27\2\u00b5"+
		"\u00b7\u00be\u00c0\u00c4\u00cb\u0105\u0259\u025f\u0265\u0279\u027d\u028d"+
		"\u0296\u029f\u02a6\u02ab\u02b2\u02b8\u02c4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}